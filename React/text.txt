Why React?
    1. SPA (Single Paga Application)
    2. HTML 재사용이 편리하다
    3. 같은 문법으로 앱 개발 가능(React-Native)

Directory
    - node_modules: 라이브러리 코드 보관함
    - public: static 파일 보관함
    - src: source 파일 보관함
    * package.json: 프로젝트 정보 및 라이브러리 정보

Why State?
    - 데이터 바인딩 시 State로 관리되는 변수값들은 자동으로 재 렌더링이 된다.
      -> 일반 변수는 재렌더링 되지 않음
    - const [title, setTitle] = useState("영화제목")
      -> title은 useState("영화제목")의 "영화제목"이다.
      -> setTitle은 title을 변경할 수 있는 함수
    - 변동시 HTML이 재렌더링 되는 값들에 사용한다.
      -> 온갖 변수를 사용하는 것이 아닌 값이 자주 바뀌는 것들을 state로 관리한다.
    
setState
    - Array/Object
        - Array, Object를 담은 변수엔 값이 저장되는 것이 아닌 램에 저장된 값을 가리키는 화살표가 저장된다.
        - 원본테이터를 변경하지 않고 Spread operator를 사용한다 
        - let copy = [...arr]